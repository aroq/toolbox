#!/usr/bin/env variant
# vi: ft=yaml

description: Toolbox management tasks

parameters:
- name: TOOLBOX_DIR
  default: .toolbox
- name: TOOLBOX_TOOLS_DIR
  default: .toolbox/tools
- name: TOOLBOX_SETTINGS_FILE_NAME
  default: .toolbox.settings.yaml
- name: TOOLBOX_EXECUTABLES_DIR
  default: bin

tasks:
  test:
    steps:
    - script: |
        echo "test"
  initialize:
    steps:
      - task: tools.install
      - task: cmd.create
  tools:
    tasks:
      install:
        steps:
        - script: |
            rm -fR {{ .TOOLBOX_TOOLS_DIR }}
            mkdir -p {{ .TOOLBOX_TOOLS_DIR }}

            uniconf -c {{ .TOOLBOX_SETTINGS_FILE_NAME }} > {{ .TOOLBOX_DIR }}/{{ .TOOLBOX_SETTINGS_FILE_NAME }}

            yq r {{ .TOOLBOX_DIR }}/{{ .TOOLBOX_SETTINGS_FILE_NAME }} -j | jq -r '.tools | to_entries | unique_by(.value.destination) | .[] | select(.value.source != null) | @text "\(.value.source) \(.value.prefix)/\(.value.tools_dir)/\(.value.destination)"' | xargs -n2 go-getter

      list:
        steps:
        - script: |
            uniconf -c {{ .TOOLBOX_SETTINGS_FILE_NAME }} > {{ .TOOLBOX_DIR }}/{{ .TOOLBOX_SETTINGS_FILE_NAME }}

            yq r {{ .TOOLBOX_DIR }}/{{ .TOOLBOX_SETTINGS_FILE_NAME }} -j | jq -r '.tools | to_entries | .[] | @text "\(.value.source) \(.value.prefix)/\(.value.tools_dir)/\(.value.destination)"'

  cmd:
    tasks:
      create:
        steps:
        - script: |
            mkdir -p {{ .TOOLBOX_EXECUTABLES_DIR }}
            yq r {{ .TOOLBOX_DIR }}/{{ .TOOLBOX_SETTINGS_FILE_NAME }} -j | \
              jq -r '.tools | to_entries | .[] | .key' | \
              xargs -I "%" \
              sh -c "yq r {{ .TOOLBOX_DIR }}/{{ .TOOLBOX_SETTINGS_FILE_NAME }} -j | jq '.tools.%' | gomplate -f {{ .TOOLBOX_DIR }}/core/templates/bin/run.tpl -o {{ .TOOLBOX_EXECUTABLES_DIR }}/% --context task=stdin:///foo.yml; chmod a+x {{ .TOOLBOX_EXECUTABLES_DIR }}/%"


